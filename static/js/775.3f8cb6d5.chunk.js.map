{"version":3,"file":"static/js/775.3f8cb6d5.chunk.js","mappings":"sKAwDA,UArDoB,WAAO,IAAD,cAEtB,GAAyBA,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,SAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,MAKAC,EAAAA,EAAAA,YAAW,WACPC,UAAUC,YAAYC,oBAAmB,SAACC,GAEtCC,IAAAA,IAAA,8DAAiED,EAASE,OAAOC,SAAjF,gBAAiGH,EAASE,OAAOE,UAAjH,kBADe,oCACf,OAA6IV,IACvIW,MAAK,SAAAC,GAAOf,EAASe,EAAIC,cAErC,CAACb,IAmBH,OACI,iBAAKc,UAAU,OAAf,WAEQ,eAAGA,UAAU,OAAb,cAAuBlB,EAAMmB,SAAS,gBAAKD,UAAU,QAAQE,IAAG,sDAAyCpB,EAAMmB,eAA/C,aAAyC,EAAgB,GAAGE,KAA5D,WAA2EC,IAAI,KAAQ,KAAvJ,UACMtB,EAAMuB,YADZ,aACM,EAAYC,KADlB,KACwB,iBAAKN,UAAU,UAAf,WAChB,eAAGO,KAAK,IAAIP,UAAU,UAAUQ,QApBrC,WACXvB,EAAY,SACZE,EAAa,kBAkBG,eAAoD,iCAApD,OADgB,QACsD,eAAGoB,KAAK,IAAIP,UAAU,aAAaQ,QAb1G,WACfvB,EAAY,SACZE,EAAa,KAWyE,eAAyD,iCAAzD,OADtD,WAGxB,wBAAKL,EAAM2B,QACX,0BAAG,6CAAH,cAA6B3B,EAAMuB,YAAnC,aAA6B,EAAYK,SAAzC,KAAmD,gBAAKV,UAAU,WAAf,SAA2BhB,IAA9E,QACA,0BAAG,6CAAH,eAA8BF,EAAMuB,YAApC,aAA8B,EAAYM,SAA1C,KAAoD,iBAAKX,UAAU,WAAf,cAA4BhB,EAA5B,WACpD,8BAAI,yCAAJ,cAA0BF,EAAM8B,cAAhC,aAA0B,EAAcC,IAAxC,SACA,8BAAI,sCAAJ,cAAuB/B,EAAMuB,YAA7B,aAAuB,EAAYS,SAAnC,WACA,0BAAG,qCAAH,cAAqBhC,EAAMiC,YAA3B,aAAqB,EAAYC,MAAjC","sources":["components/Weatherinfo.js"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Weatherinfo = () => {\n\n    const [value, setValue]= useState({});\n    const [unitTemp, setUintTemp] = useState('°K');\n    const [converter, setConverter] = useState('');\n  \n\n\n    \n    useEffect (()=>{\n        navigator.geolocation.getCurrentPosition((position) =>{\n            const APIKey = \"ca34e663b54713b53eed2bb28caceef0\";\n            axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${APIKey}${converter}`)\n                 .then(res =>{setValue(res.data)})\n        });\n    },[converter]);\n\n\n    \n    const celcius =() =>{\n        setUintTemp('°C')\n        setConverter('&units=metric')\n        \n    }\n\n\n    const Fahrenheit = () =>{\n        setUintTemp('°K')\n        setConverter('')\n        \n    }\n\n    \n    \n    return (\n        <div className='card'>\n           \n                <p className='temp'> { value.weather? <img className='icons' src = {`https://openweathermap.org/img/wn/${value.weather?.[0].icon}@2x.png`} alt=\"\" /> : null}\n                     {value.main?.temp} <sup className='expUnit'>\n                        <a href=\"#\" className='celcius' onClick={celcius} > <b>°C</b> </a>  | <a href=\"#\" className='Fahrenheit' onClick={Fahrenheit}> <b>°K</b> </a> </sup>\n                </p>\n                <h3>{value.name}</h3>\n                <p><b>Max temperature :</b> {value.main?.temp_max} <sup className='expUnit2'>{unitTemp}</sup> </p>\n                <p><b>Min temperature :</b>  {value.main?.temp_min} <sup className='expUnit2'> {unitTemp} </sup></p>\n                <p> <b>Cloud cover :</b> {value.clouds?.all} %</p>\n                <p> <b>Pressure :</b> {value.main?.pressure} hPa</p>\n                <p><b>Wind to :</b> {value.wind?.speed} metro/seg</p>\n            \n\n        </div>\n    );\n};\n\nexport default Weatherinfo;"],"names":["useState","value","setValue","unitTemp","setUintTemp","converter","setConverter","useEffect","navigator","geolocation","getCurrentPosition","position","axios","coords","latitude","longitude","then","res","data","className","weather","src","icon","alt","main","temp","href","onClick","name","temp_max","temp_min","clouds","all","pressure","wind","speed"],"sourceRoot":""}